# In v1 configuration, type and id are @ prefix parameters.
# @type and @id are recommended. type and id are still available for backward compatibility

## built-in TCP input
## $ echo <json> | fluent-cat <tag>
<source>
  @type forward
  @id forward_input
</source>

## built-in UNIX socket input
#<source>
#  @type unix
#</source>

# HTTP input
# http://localhost:8888/<tag>?json=<json>
<source>
  @type http
  @id http_input

  port 8888
</source>

## File input
<source>
  @type tail
  path ./log/input.log
  read_from_head true
  pos_file ./input.log.pos
  tag test
  <parse>
    @type none
  </parse>
</source>

## read apache logs with tag=apache.access
#<source>
#  @type tail
#  format apache
#  path /var/log/httpd-access.log
#  tag apache.access
#</source>

## Mutating event filter
## Add hostname and tag fields to apache.access tag events
#<filter apache.access>
#  @type record_transformer
#  <record>
#    hostname ${hostname}
#    tag ${tag}
#  </record>
#</filter>

## Selecting event filter
## Remove unnecessary events from apache prefixed tag events
#<filter apache.**>
#  @type grep
#  include1 method GET # pass only GET in 'method' field
#  exclude1 message debug # remove debug event
#</filter>

# Listen HTTP for monitoring
# http://localhost:24220/api/plugins
# http://localhost:24220/api/plugins?type=TYPE
# http://localhost:24220/api/plugins?tag=MYTAG
<source>
  @type monitor_agent
  @id monitor_agent_input

  port 24220
</source>

# Listen DRb for debug
<source>
  @type debug_agent
  @id debug_agent_input

  bind 127.0.0.1
  port 24230
</source>

## match tag=apache.access and write to file
#<match apache.access>
#  @type file
#  path /var/log/fluent/access
#</match>

<match test>
  @type file
  # This folder stores the buffered log files, and would be cleared after export as a log file
  # The actual path is path + time + ".log", and it seems that there's no way to change the file type
  path ./out
  <buffer>
    timekey 1m
    timekey_use_utc true
    timekey_wait 0
  </buffer>
</match>

# <match pattern>
#   @type s3

#   aws_key_id YOUR_AWS_KEY_ID
#   aws_sec_key YOUR_AWS_SECRET_KEY
#   s3_bucket YOUR_S3_BUCKET_NAME
#   s3_region ap-northeast-1
#   path logs/
#   # The actual path on S3 will be: {path}{time_slice_format}_{sequential_index}.gz (see s3_object_key_format) by default
#   # if you want to use ${tag} or %Y/%m/%d/ like syntax in path / s3_object_key_format,
#   # need to specify tag for ${tag} and time for %Y/%m/%d in <buffer> argument.
#   <buffer tag,time>
#     @type file
#     path /var/log/fluent/s3
#     timekey 3600 # 1 hour partition
#     timekey_wait 10m
#     timekey_use_utc true # use utc
#     chunk_limit_size 256m
#   </buffer>
# </match>

## match tag=debug.** and dump to console
<match debug.**>
  @type stdout
  @id stdout_output
</match>

# match tag=system.** and forward to another fluent server
<match system.**>
  @type forward
  @id forward_output

  <server>
    host 192.168.0.11
  </server>
  <secondary>
    <server>
      host 192.168.0.12
    </server>
  </secondary>
</match>

## match tag=myapp.** and forward and write to file
#<match myapp.**>
#  @type copy
#  <store>
#    @type forward
#    buffer_type file
#    buffer_path /var/log/fluent/myapp-forward
#    retry_limit 50
#    flush_interval 10s
#    <server>
#      host 192.168.0.13
#    </server>
#  </store>
#  <store>
#    @type file
#    path /var/log/fluent/myapp
#  </store>
#</match>

## match fluent's internal events
#<match fluent.**>
#  @type null
#</match>

## match not matched logs and write to file
#<match **>
#  @type file
#  path /var/log/fluent/else
#  compress gz
#</match>

## Label: For handling complex event routing
#<label @STAGING>
#  <match system.**>
#    @type forward
#    @id staging_forward_output
#    <server>
#      host 192.168.0.101
#    </server>
#  </match>
#</label>
